typesFreq = as.data.frame(table(combinedTypes))
typesFreq = typesFreq[-13,]
typesColors = c('#A8B820','#705848', '#7038F8', '#F8D030', '#EE99AC', '#C03028', '#F08030', '#A890F0', '#705898', '#78C850', '#E0C068', '#98D8D8', '#A8A878', '#A040A0', '#F85888', '#B8A038', '#B8B8D0', '#6890F0')
p = ggplot(data=typesFreq, aes(x=combinedTypes, y=Freq)) +
geom_bar(stat="identity", fill=typesColors) +
xlab("Type") + ylab("Count") +
ggtitle(paste("Distribution of Pokemon Types: ", titleString)) +
theme(plot.title = element_text(hjust = 0.5, face='bold'))
p
}
#######################################
# type distribution by region
#######################################
regions = unique(data$region)
regions = as.character(regions)
regions = c("All", regions)
plots = list()
for (i in 1:length(regions)) {
regionString = regions[i]
regionData = NULL
if (regionString != "All") {
regionData = data[which(data$region == regionString),]
} else {
regionData = data
}
plots[[i]] = plotPokemonTypes(regionData, regionString)
}
do.call(grid.arrange, list(grobs=plots, ncol=2, top="Distribution of Pokemon Types"))
plotPokemonTypes = function(data, titleString) {
combinedTypes = c(data$type1, data$type2)
typesFreq = as.data.frame(table(combinedTypes))
typesFreq = typesFreq[-13,]
typesColors = c('#A8B820','#705848', '#7038F8', '#F8D030', '#EE99AC', '#C03028', '#F08030', '#A890F0', '#705898', '#78C850', '#E0C068', '#98D8D8', '#A8A878', '#A040A0', '#F85888', '#B8A038', '#B8B8D0', '#6890F0')
p = ggplot(data=typesFreq, aes(x=combinedTypes, y=Freq)) +
geom_bar(stat="identity", fill=typesColors) +
xlab("Type") + ylab("Count") +
ggtitle(titleString) +
theme(plot.title = element_text(hjust = 0.5, face='bold'))
p
}
#######################################
# type distribution by region
#######################################
regions = unique(data$region)
regions = as.character(regions)
regions = c("All", regions)
plots = list()
for (i in 1:length(regions)) {
regionString = regions[i]
regionData = NULL
if (regionString != "All") {
regionString = "All Regions"
regionData = data[which(data$region == regionString),]
} else {
regionData = data
}
plots[[i]] = plotPokemonTypes(regionData, regionString)
}
do.call(grid.arrange, list(grobs=plots, ncol=2, top="Distribution of Pokemon Types"))
plotPokemonTypes = function(data, titleString) {
combinedTypes = c(data$type1, data$type2)
typesFreq = as.data.frame(table(combinedTypes))
typesFreq = typesFreq[-13,]
typesColors = c('#A8B820','#705848', '#7038F8', '#F8D030', '#EE99AC', '#C03028', '#F08030', '#A890F0', '#705898', '#78C850', '#E0C068', '#98D8D8', '#A8A878', '#A040A0', '#F85888', '#B8A038', '#B8B8D0', '#6890F0')
p = ggplot(data=typesFreq, aes(x=combinedTypes, y=Freq)) +
geom_bar(stat="identity", fill=typesColors) +
xlab("Type") + ylab("Count") +
ggtitle(titleString) +
theme(plot.title = element_text(hjust = 0.5, face='bold'))
p
}
#######################################
# type distribution by region
#######################################
regions = unique(data$region)
regions = as.character(regions)
regions = c("All", regions)
plots = list()
for (i in 1:length(regions)) {
regionString = regions[i]
regionData = NULL
if (regionString != "All") {
regionData = data[which(data$region == regionString),]
regionString = "All Regions"
} else {
regionData = data
}
plots[[i]] = plotPokemonTypes(regionData, regionString)
}
do.call(grid.arrange, list(grobs=plots, ncol=2, top="Distribution of Pokemon Types"))
regions = unique(data$region)
regions = as.character(regions)
regions = c("All", regions)
plots = list()
for (i in 1:length(regions)) {
regionString = regions[i]
regionData = NULL
if (regionString != "All") {
regionData = data[which(data$region == regionString),]
regionString = "All Regions"
} else {
regionData = data
regionString = paste(regionString, " Region")
}
plots[[i]] = plotPokemonTypes(regionData, regionString)
}
do.call(grid.arrange, list(grobs=plots, ncol=2, top="Distribution of Pokemon Types"))
plots = list()
for (i in 1:length(regions)) {
regionString = regions[i]
regionData = NULL
if (regionString != "All") {
regionData = data[which(data$region == regionString),]
regionString = paste(regionString, " Region")
} else {
regionData = data
regionString = "All Regions"
}
plots[[i]] = plotPokemonTypes(regionData, regionString)
}
do.call(grid.arrange, list(grobs=plots, ncol=2, top="Distribution of Pokemon Types"))
dim(regionData)
plotPokemonTypes = function(data, titleString) {
combinedTypes = c(data$type1, data$type2)
typesFreq = as.data.frame(table(combinedTypes))
typesFreq = typesFreq[-13,]
typesColors = c('#A8B820','#705848', '#7038F8', '#F8D030', '#EE99AC', '#C03028', '#F08030', '#A890F0', '#705898', '#78C850', '#E0C068', '#98D8D8', '#A8A878', '#A040A0', '#F85888', '#B8A038', '#B8B8D0', '#6890F0')
p = ggplot(data=typesFreq, aes(x=combinedTypes, y=Freq)) +
geom_bar(stat="identity", fill=typesColors) +
xlab("Type") + ylab("Count") + ylim(c(0,40))
ggtitle(titleString) +
theme(plot.title = element_text(hjust = 0.5, face='bold'))
p
}
#######################################
# type distribution by region
#######################################
regions = unique(data$region)
regions = as.character(regions)
regions = c("All", regions)
plots = list()
for (i in 1:length(regions)) {
regionString = regions[i]
regionData = NULL
if (regionString != "All") {
regionData = data[which(data$region == regionString),]
regionString = paste(regionString, " Region")
} else {
regionData = data
regionString = "All Regions"
}
pokeCount = dim(regionData)[1]
regionString = paste(regionString, " (", pokeCount, " total Pokemon)")
plots[[i]] = plotPokemonTypes(regionData, regionString)
}
do.call(grid.arrange, list(grobs=plots, ncol=2, top=textGrob("Distribution of Pokemon Types", gp=gpar(fontface="bold"))))
#####################################
plotPokemonTypes = function(data, titleString) {
combinedTypes = c(data$type1, data$type2)
typesFreq = as.data.frame(table(combinedTypes))
typesFreq = typesFreq[-13,]
typesColors = c('#A8B820','#705848', '#7038F8', '#F8D030', '#EE99AC', '#C03028', '#F08030', '#A890F0', '#705898', '#78C850', '#E0C068', '#98D8D8', '#A8A878', '#A040A0', '#F85888', '#B8A038', '#B8B8D0', '#6890F0')
p = ggplot(data=typesFreq, aes(x=combinedTypes, y=Freq)) +
geom_bar(stat="identity", fill=typesColors) +
xlab("Type") + ylab("Count") + ylim(c(0,40))
ggtitle(titleString) +
theme(plot.title = element_text(hjust = 0.5, face='bold'))
p
}
plotPokemonTypesALL = function() {
combinedTypes = c(data$type1, data$type2)
typesFreq = as.data.frame(table(combinedTypes))
typesFreq = typesFreq[-13,]
typesColors = c('#A8B820','#705848', '#7038F8', '#F8D030', '#EE99AC', '#C03028', '#F08030', '#A890F0', '#705898', '#78C850', '#E0C068', '#98D8D8', '#A8A878', '#A040A0', '#F85888', '#B8A038', '#B8B8D0', '#6890F0')
p = ggplot(data=typesFreq, aes(x=combinedTypes, y=Freq)) +
geom_bar(stat="identity", fill=typesColors) +
xlab("Type") + ylab("Count")
ggtitle("All Regions (908 total Pokemon)") +
theme(plot.title = element_text(hjust = 0.5, face='bold'))
p
}
#######################################
# type distribution by region
#######################################
regions = unique(data$region)
regions = as.character(regions)
plots = list()
for (i in 1:length(regions)) {
regionString = regions[i]
regionData = data[which(data$region == regionString),]
regionString = paste(regionString, " Region")
pokeCount = dim(regionData)[1]
regionString = paste(regionString, " (", pokeCount, " total Pokemon)")
plots[[i]] = plotPokemonTypes(regionData, regionString)
}
plots = list(plotPokemonTypesALL, plots)
do.call(grid.arrange, list(grobs=plots, ncol=2, top=textGrob("Distribution of Pokemon Types", gp=gpar(fontface="bold"))))
plotPokemonTypes = function(data, titleString) {
combinedTypes = c(data$type1, data$type2)
typesFreq = as.data.frame(table(combinedTypes))
typesFreq = typesFreq[-13,]
typesColors = c('#A8B820','#705848', '#7038F8', '#F8D030', '#EE99AC', '#C03028', '#F08030', '#A890F0', '#705898', '#78C850', '#E0C068', '#98D8D8', '#A8A878', '#A040A0', '#F85888', '#B8A038', '#B8B8D0', '#6890F0')
p = ggplot(data=typesFreq, aes(x=combinedTypes, y=Freq)) +
geom_bar(stat="identity", fill=typesColors) +
xlab("Type") + ylab("Count") + ylim(c(0,40))
ggtitle(titleString) +
theme(plot.title = element_text(hjust = 0.5, face='bold'))
p
}
plotPokemonTypesALL = function() {
combinedTypes = c(data$type1, data$type2)
typesFreq = as.data.frame(table(combinedTypes))
typesFreq = typesFreq[-13,]
typesColors = c('#A8B820','#705848', '#7038F8', '#F8D030', '#EE99AC', '#C03028', '#F08030', '#A890F0', '#705898', '#78C850', '#E0C068', '#98D8D8', '#A8A878', '#A040A0', '#F85888', '#B8A038', '#B8B8D0', '#6890F0')
p = ggplot(data=typesFreq, aes(x=combinedTypes, y=Freq)) +
geom_bar(stat="identity", fill=typesColors) +
xlab("Type") + ylab("Count")
ggtitle("All Regions (908 total Pokemon)") +
theme(plot.title = element_text(hjust = 0.5, face='bold'))
p
}
#######################################
# type distribution by region
#######################################
regions = unique(data$region)
regions = as.character(regions)
plots = list()
for (i in 1:length(regions)) {
regionString = regions[i]
regionData = data[which(data$region == regionString),]
regionString = paste(regionString, " Region")
pokeCount = dim(regionData)[1]
regionString = paste(regionString, " (", pokeCount, " total Pokemon)")
plots[[i]] = plotPokemonTypes(regionData, regionString)
}
plots = list(plotPokemonTypesALL(), plots)
do.call(grid.arrange, list(grobs=plots, ncol=2, top=textGrob("Distribution of Pokemon Types", gp=gpar(fontface="bold"))))
plotPokemonTypes = function(data, titleString) {
combinedTypes = c(data$type1, data$type2)
typesFreq = as.data.frame(table(combinedTypes))
typesFreq = typesFreq[-13,]
typesColors = c('#A8B820','#705848', '#7038F8', '#F8D030', '#EE99AC', '#C03028', '#F08030', '#A890F0', '#705898', '#78C850', '#E0C068', '#98D8D8', '#A8A878', '#A040A0', '#F85888', '#B8A038', '#B8B8D0', '#6890F0')
p = ggplot(data=typesFreq, aes(x=combinedTypes, y=Freq)) +
geom_bar(stat="identity", fill=typesColors) +
xlab("Type") + ylab("Count") + ylim(c(0,40))
ggtitle(titleString) +
theme(plot.title = element_text(hjust = 0.5, face='bold'))
p
}
plotPokemonTypesALL = function() {
combinedTypes = c(data$type1, data$type2)
typesFreq = as.data.frame(table(combinedTypes))
typesFreq = typesFreq[-13,]
typesColors = c('#A8B820','#705848', '#7038F8', '#F8D030', '#EE99AC', '#C03028', '#F08030', '#A890F0', '#705898', '#78C850', '#E0C068', '#98D8D8', '#A8A878', '#A040A0', '#F85888', '#B8A038', '#B8B8D0', '#6890F0')
p = ggplot(data=typesFreq, aes(x=combinedTypes, y=Freq)) +
geom_bar(stat="identity", fill=typesColors) +
xlab("Type") + ylab("Count")
ggtitle("All Regions (908 total Pokemon)") +
theme(plot.title = element_text(hjust = 0.5, face='bold'))
p
}
#######################################
# type distribution by region
#######################################
regions = unique(data$region)
regions = as.character(regions)
plots = list()
for (i in 1:length(regions)) {
regionString = regions[i]
regionData = data[which(data$region == regionString),]
regionString = paste(regionString, " Region")
pokeCount = dim(regionData)[1]
regionString = paste(regionString, " (", pokeCount, " total Pokemon)")
plots[[i]] = plotPokemonTypes(regionData, regionString)
}
plots[[8]] = plotPokemonTypesALL()
do.call(grid.arrange, list(grobs=plots, ncol=2, top=textGrob("Distribution of Pokemon Types", gp=gpar(fontface="bold"))))
regions = unique(data$region)
regions = as.character(regions)
plots = list()
for (i in 1:length(regions)) {
regionString = regions[i]
regionData = data[which(data$region == regionString),]
regionString = paste(regionString, " Region")
pokeCount = dim(regionData)[1]
regionString = paste(regionString, " (", pokeCount, " total Pokemon)")
print regionString
plots[[i]] = plotPokemonTypes(regionData, regionString)
}
plots[[8]] = plotPokemonTypesALL()
do.call(grid.arrange, list(grobs=plots, ncol=2, top=textGrob("Distribution of Pokemon Types", gp=gpar(fontface="bold"))))
regions = unique(data$region)
regions = as.character(regions)
plots = list()
for (i in 1:length(regions)) {
regionString = regions[i]
regionData = data[which(data$region == regionString),]
regionString = paste(regionString, " Region")
pokeCount = dim(regionData)[1]
regionString = paste(regionString, " (", pokeCount, " total Pokemon)")
print(regionString)
plots[[i]] = plotPokemonTypes(regionData, regionString)
}
plots[[8]] = plotPokemonTypesALL()
do.call(grid.arrange, list(grobs=plots, ncol=2, top=textGrob("Distribution of Pokemon Types", gp=gpar(fontface="bold"))))
plotPokemonTypes = function(data, titleString) {
combinedTypes = c(data$type1, data$type2)
typesFreq = as.data.frame(table(combinedTypes))
typesFreq = typesFreq[-13,]
typesColors = c('#A8B820','#705848', '#7038F8', '#F8D030', '#EE99AC', '#C03028', '#F08030', '#A890F0', '#705898', '#78C850', '#E0C068', '#98D8D8', '#A8A878', '#A040A0', '#F85888', '#B8A038', '#B8B8D0', '#6890F0')
print(titleString)
p = ggplot(data=typesFreq, aes(x=combinedTypes, y=Freq)) +
geom_bar(stat="identity", fill=typesColors) +
xlab("Type") + ylab("Count") + ylim(c(0,40))
ggtitle(titleString) +
theme(plot.title = element_text(hjust = 0.5, face='bold'))
p
}
plotPokemonTypesALL = function() {
combinedTypes = c(data$type1, data$type2)
typesFreq = as.data.frame(table(combinedTypes))
typesFreq = typesFreq[-13,]
typesColors = c('#A8B820','#705848', '#7038F8', '#F8D030', '#EE99AC', '#C03028', '#F08030', '#A890F0', '#705898', '#78C850', '#E0C068', '#98D8D8', '#A8A878', '#A040A0', '#F85888', '#B8A038', '#B8B8D0', '#6890F0')
p = ggplot(data=typesFreq, aes(x=combinedTypes, y=Freq)) +
geom_bar(stat="identity", fill=typesColors) +
xlab("Type") + ylab("Count")
ggtitle("All Regions (908 total Pokemon)") +
theme(plot.title = element_text(hjust = 0.5, face='bold'))
p
}
#######################################
# type distribution by region
#######################################
regions = unique(data$region)
regions = as.character(regions)
plots = list()
for (i in 1:length(regions)) {
regionString = regions[i]
regionData = data[which(data$region == regionString),]
regionString = paste(regionString, " Region", sep="")
pokeCount = dim(regionData)[1]
regionString = paste(regionString, " (", pokeCount, " total Pokemon)", sep="")
plots[[i]] = plotPokemonTypes(regionData, regionString)
}
plots[[8]] = plotPokemonTypesALL()
do.call(grid.arrange, list(grobs=plots, ncol=2, top=textGrob("Distribution of Pokemon Types", gp=gpar(fontface="bold"))))
plotPokemonTypes = function(data, titleString) {
combinedTypes = c(data$type1, data$type2)
typesFreq = as.data.frame(table(combinedTypes))
typesFreq = typesFreq[-13,]
typesColors = c('#A8B820','#705848', '#7038F8', '#F8D030', '#EE99AC', '#C03028', '#F08030', '#A890F0', '#705898', '#78C850', '#E0C068', '#98D8D8', '#A8A878', '#A040A0', '#F85888', '#B8A038', '#B8B8D0', '#6890F0')
print(titleString)
p = ggplot(data=typesFreq, aes(x=combinedTypes, y=Freq)) +
geom_bar(stat="identity", fill=typesColors) +
xlab("Type") + ylab("Count") + ylim(c(0,40))
ggtitle(titleString) +
theme(plot.title = element_text(hjust = 0.5, face='bold'))
p
}
plotPokemonTypesALL = function() {
combinedTypes = c(data$type1, data$type2)
typesFreq = as.data.frame(table(combinedTypes))
typesFreq = typesFreq[-13,]
typesColors = c('#A8B820','#705848', '#7038F8', '#F8D030', '#EE99AC', '#C03028', '#F08030', '#A890F0', '#705898', '#78C850', '#E0C068', '#98D8D8', '#A8A878', '#A040A0', '#F85888', '#B8A038', '#B8B8D0', '#6890F0')
p = ggplot(data=typesFreq, aes(x=combinedTypes, y=Freq)) +
geom_bar(stat="identity", fill=typesColors) +
xlab("Type") + ylab("Count")
ggtitle("All Regions (908 total Pokemon)") +
theme(plot.title = element_text(hjust = 0.5, face='bold'))
p
}
#######################################
# type distribution by region
#######################################
regions = unique(data$region)
regions = as.character(regions)
plots = list()
for (i in 1:length(regions)) {
regionString = regions[i]
regionData = data[which(data$region == regionString),]
regionString = paste(regionString, " Region", sep="")
pokeCount = dim(regionData)[1]
regionString = paste(regionString, " (", pokeCount, " total Pokemon)", sep="")
plots[[i]] = plotPokemonTypes(regionData, regionString)
}
plots[[8]] = plotPokemonTypesALL()
do.call(grid.arrange, list(grobs=plots, ncol=2, top="Distribution of Pokemon Types"))
plotPokemonTypes = function(data, titleString) {
combinedTypes = c(data$type1, data$type2)
typesFreq = as.data.frame(table(combinedTypes))
typesFreq = typesFreq[-13,]
typesColors = c('#A8B820','#705848', '#7038F8', '#F8D030', '#EE99AC', '#C03028', '#F08030', '#A890F0', '#705898', '#78C850', '#E0C068', '#98D8D8', '#A8A878', '#A040A0', '#F85888', '#B8A038', '#B8B8D0', '#6890F0')
print(titleString)
p = ggplot(data=typesFreq, aes(x=combinedTypes, y=Freq)) +
geom_bar(stat="identity", fill=typesColors) +
xlab("Type") + ylab("Count") + ylim(c(0,40)) +
ggtitle(titleString) +
theme(plot.title = element_text(hjust = 0.5, face='bold'))
p
}
plotPokemonTypesALL = function() {
combinedTypes = c(data$type1, data$type2)
typesFreq = as.data.frame(table(combinedTypes))
typesFreq = typesFreq[-13,]
typesColors = c('#A8B820','#705848', '#7038F8', '#F8D030', '#EE99AC', '#C03028', '#F08030', '#A890F0', '#705898', '#78C850', '#E0C068', '#98D8D8', '#A8A878', '#A040A0', '#F85888', '#B8A038', '#B8B8D0', '#6890F0')
p = ggplot(data=typesFreq, aes(x=combinedTypes, y=Freq)) +
geom_bar(stat="identity", fill=typesColors) +
xlab("Type") + ylab("Count") +
ggtitle("All Regions (908 total Pokemon)") +
theme(plot.title = element_text(hjust = 0.5, face='bold'))
p
}
#######################################
# type distribution by region
#######################################
regions = unique(data$region)
regions = as.character(regions)
plots = list()
for (i in 1:length(regions)) {
regionString = regions[i]
regionData = data[which(data$region == regionString),]
regionString = paste(regionString, " Region", sep="")
pokeCount = dim(regionData)[1]
regionString = paste(regionString, " (", pokeCount, " total Pokemon)", sep="")
plots[[i]] = plotPokemonTypes(regionData, regionString)
}
plots[[8]] = plotPokemonTypesALL()
do.call(grid.arrange, list(grobs=plots, ncol=2, top=textGrob("Distribution of Pokemon Types", gp=gpar(fontface="bold"))))
do.call(grid.arrange, list(grobs=plots, ncol=2, top=textGrob("Distribution of Pokemon Types", gp=gpar(fontface="bold", fontsize=15))))
do.call(grid.arrange, list(grobs=plots, ncol=2, top=textGrob("Distribution of Pokemon Types", gp=gpar(fontface="bold", fontsize=16))))
plotPokemonTypes = function(data, titleString) {
combinedTypes = c(data$type1, data$type2)
typesFreq = as.data.frame(table(combinedTypes))
typesFreq = typesFreq[-13,]
typesColors = c('#A8B820','#705848', '#7038F8', '#F8D030', '#EE99AC', '#C03028', '#F08030', '#A890F0', '#705898', '#78C850', '#E0C068', '#98D8D8', '#A8A878', '#A040A0', '#F85888', '#B8A038', '#B8B8D0', '#6890F0')
print(titleString)
p = ggplot(data=typesFreq, aes(x=combinedTypes, y=Freq)) +
geom_bar(stat="identity", fill=typesColors) +
ylab("Count") + ylim(c(0,40)) +
ggtitle(titleString) +
theme(plot.title = element_text(hjust = 0.5, face='bold'))
p
}
plotPokemonTypesALL = function() {
combinedTypes = c(data$type1, data$type2)
typesFreq = as.data.frame(table(combinedTypes))
typesFreq = typesFreq[-13,]
typesColors = c('#A8B820','#705848', '#7038F8', '#F8D030', '#EE99AC', '#C03028', '#F08030', '#A890F0', '#705898', '#78C850', '#E0C068', '#98D8D8', '#A8A878', '#A040A0', '#F85888', '#B8A038', '#B8B8D0', '#6890F0')
p = ggplot(data=typesFreq, aes(x=combinedTypes, y=Freq)) +
geom_bar(stat="identity", fill=typesColors) +
ylab("Count") +
ggtitle("All Regions (908 total Pokemon)") +
theme(plot.title = element_text(hjust = 0.5, face='bold'))
p
}
#######################################
# type distribution by region
#######################################
regions = unique(data$region)
regions = as.character(regions)
plots = list()
for (i in 1:length(regions)) {
regionString = regions[i]
regionData = data[which(data$region == regionString),]
regionString = paste(regionString, " Region", sep="")
pokeCount = dim(regionData)[1]
regionString = paste(regionString, " (", pokeCount, " total Pokemon)", sep="")
plots[[i]] = plotPokemonTypes(regionData, regionString)
}
plots[[8]] = plotPokemonTypesALL()
do.call(grid.arrange, list(grobs=plots, ncol=2, top=textGrob("Distribution of Pokemon Types", gp=gpar(fontface="bold", fontsize=16))))
plotPokemonTypes = function(data, titleString) {
combinedTypes = c(data$type1, data$type2)
typesFreq = as.data.frame(table(combinedTypes))
typesFreq = typesFreq[-13,]
typesColors = c('#A8B820','#705848', '#7038F8', '#F8D030', '#EE99AC', '#C03028', '#F08030', '#A890F0', '#705898', '#78C850', '#E0C068', '#98D8D8', '#A8A878', '#A040A0', '#F85888', '#B8A038', '#B8B8D0', '#6890F0')
print(titleString)
p = ggplot(data=typesFreq, aes(x=combinedTypes, y=Freq)) +
geom_bar(stat="identity", fill=typesColors) +
xlab("") + ylab("Count") + ylim(c(0,40)) +
ggtitle(titleString) +
theme(plot.title = element_text(hjust = 0.5, face='bold'))
p
}
plotPokemonTypesALL = function() {
combinedTypes = c(data$type1, data$type2)
typesFreq = as.data.frame(table(combinedTypes))
typesFreq = typesFreq[-13,]
typesColors = c('#A8B820','#705848', '#7038F8', '#F8D030', '#EE99AC', '#C03028', '#F08030', '#A890F0', '#705898', '#78C850', '#E0C068', '#98D8D8', '#A8A878', '#A040A0', '#F85888', '#B8A038', '#B8B8D0', '#6890F0')
p = ggplot(data=typesFreq, aes(x=combinedTypes, y=Freq)) +
geom_bar(stat="identity", fill=typesColors) +
xlab("") + ylab("Count") +
ggtitle("All Regions (908 total Pokemon)") +
theme(plot.title = element_text(hjust = 0.5, face='bold'))
p
}
#######################################
# type distribution by region
#######################################
regions = unique(data$region)
regions = as.character(regions)
plots = list()
for (i in 1:length(regions)) {
regionString = regions[i]
regionData = data[which(data$region == regionString),]
regionString = paste(regionString, " Region", sep="")
pokeCount = dim(regionData)[1]
regionString = paste(regionString, " (", pokeCount, " total Pokemon)", sep="")
plots[[i]] = plotPokemonTypes(regionData, regionString)
}
plots[[8]] = plotPokemonTypesALL()
do.call(grid.arrange, list(grobs=plots, ncol=2, top=textGrob("Distribution of Pokemon Types", gp=gpar(fontface="bold", fontsize=16))))
